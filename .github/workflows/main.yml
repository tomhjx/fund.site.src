# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Environment
        env:
          ACTION_DEPLOY_KEY: ${{ secrets.ACTION_DEPLOY_KEY }}
        run: |
          # set up private key for deploy
          mkdir -p ~/.ssh/
          echo "$ACTION_DEPLOY_KEY" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          # set git infomation
          git config --global user.name 'Tom'
          git config --global user.email 'tom_hejiaxi@163.com'
      - name: Deploy
        run: |
          docker run \
          -v ${{ github.workspace }}/uploads:/var/www/blog/themes/next/source/uploads \
          -v ${{ github.workspace }}/themes/next/_config.yml:/var/www/blog/themes/next/_config.yml \
          -v ${{ github.workspace }}/themes/next/layout/_partials/head/head.swig:/var/www/blog/themes/next/layout/_partials/head/head.swig \
          -v ${{ github.workspace }}/_config.yml:/var/www/blog/_config.yml \
          -v ${{ github.workspace }}/scaffolds:/var/www/blog/scaffolds \
          -v ${{ github.workspace }}/source:/var/www/blog/source \
          -v ${HOME}/.ssh/id_rsa:/root/.ssh/id_rsa \
          -v ${HOME}/.ssh/known_hosts:/root/.ssh/known_hosts \
          -v ${HOME}/.gitconfig:/root/.gitconfig \
          tomhjx/hexo:centos7.5.2.0.20201207195256 /bin/bash -c "hexo generate -d"


